回顾第一天的内容：
 * Ajax的定义（不严格）
   * 客户端与服务器端之间进行交互，而无需刷新当前页面。
 * 异步与同步：
   * 同步：客户端向服务器端发送请求，到服务器端进行响应，这个过程中，客户端不能做任何事情。
   * 异步：客户端向服务器端发送请求，到服务器端进行响应，这个过程中，客户端可以做任何事情。
 * 如何实现Ajax：
   * Ajax核心对象：XMLHttpRequest对象
     * IE浏览器提供了XMLHttp对象，该对象功能相同。
     * 创建Ajax核心对象时，考虑浏览器兼容性。
        function getXHR(){
		if(window.XMLHttpRequest){
			xhr = new XMLHttpRequest();
		}else{
			xhr = new ActiveXObject('Microsoft.XMLHttp');
		}
	}
   * 核心对象的属性和方法：
     * open( method , url , boolean)方法：创建请求
       * method：设置当前请求方式为GET还是POST等。
       * url：设置当前请求的连接。
       * boolean：设置是否是异步请求，true（默认值）表示异步。
     * send()方式：发送请求。
       * 如果是GET方式：send(null)表示不能发送任何请求参数。
         * 该步骤不能被省略！
       * 如果是POST方式：可以使用send()方法发送请求参数。
         * 在使用send()方法前，设置请求头信息：
	   xhr.setRequestHeader("Content-Type","application/x-www-form-urlencoded");  --	MIME类型
     * onreadystatechange事件：监听服务器端的通信状态的变化。
       * readyState属性：用于获取服务器端的通信状态
         * 0 - 未初始化
	 * 1 - 正在请求
	 * 2 - 请求完毕
	 * 3 - 正在响应
	 * 4 - 响应完毕
       * status属性：表示服务器端的状态码。
         * 200：表示成功
	 * 404：表示找不到网页
	 * 500：表示服务器端内部错误
     * responseText属性：接收服务器端的响应数据。
       * 接收回来的数据类型是文本格式。
 * 实现Ajax的步骤：
   * 创建Ajax的核心对象：固定写法
   * 创建请求：open()
   * 发送请求：send()
   * 接收响应：
     * onreadystatechange事件
     * readyState属性
     * status属性
     * responseText属性